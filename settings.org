* Evil Mode
** Evil Mode Settings
The only reason I even began to consider using emacs was this super awesome mode.
#+BEGIN_SRC emacs-lisp
; Use evil mode
(require 'evil)
(evil-mode t)
#+END_SRC
** Relative Numbers
If I'm using EVIL. Why not make the best setting on VIM work
#+BEGIN_SRC emacs-lisp
;Relative Numbers
(add-hook 'find-file-hook
     (lambda ()
     (linum-mode)
      (linum-relative-global-mode t)
      (set-cursor-color "#ffffff")
        ))
(setq linum-relative-current-symbol "")
#+END_SRC
** Hard Mode Practice
   #+BEGIN_SRC emacs-lisp
    (global-set-key (kbd "<left>") '(lambda()  (interactive)(message "Use Vim keys: h for Left")))
    (global-set-key (kbd "<right>") '(lambda() (interactive)(message "Use Vim keys: l for Right")))
    (global-set-key (kbd "<up>") '(lambda() (interactive)(message "Use Vim keys: k for Up")))
    (global-set-key (kbd "<down>") '(lambda() (interactive)(message "Use Vim keys: j for Down")))
   #+END_SRC

* UI Choices
#+BEGIN_SRC emacs-lisp
;UI Choices
(setq-default indent-tabs-mode nil)
(setq scroll-conservatively 100)
(setq-default tab-width 2)
(require 'powerline)
(powerline-center-evil-theme)

;Horizontal splits for temporary buffers
(defun split-horizontally-for-temp-buffers ()
   (when (one-window-p t)
     (split-window-horizontally)))

(add-hook 'temp-buffer-window-setup-hook
            'split-horizontally-for-temp-buffers)
            
;Window Size
(if (window-system)
  (set-frame-size (selected-frame) 500 500))
#+END_SRC
* Auto Complete
#+BEGIN_SRC emacs-lisp
(require 'auto-complete)
(require 'auto-complete-config)
(ac-config-default)
;((add-to-list 'ac-dictionary-directories "~/.emacs.d/ac-dict")
(global-auto-complete-mode 1)
(setq-default ac-sources '(ac-source-yasnippet
                           ac-source-abbrev
                           ac-source-dictionary
                            ac-source-words-in-same-mode-buffers))
(ac-set-trigger-key "TAB")
(ac-set-trigger-key "<tab>")
(setq ac-auto-show-menu t)
(setq ac-auto-start 2)
#+END_SRC
* Engine Mode

#+BEGIN_SRC emacs-lisp
;Engine Mode
(require 'engine-mode)

(defengine duckduckgo
  "https://duckduckgo.com/?q=%s"
:keybinding "d")

(defengine github
  "https://github.com/search?ref=simplesearch&q=%s"
:keybinding "g")

(defengine google
"http://www.google.com/search?ie=utf-8&oe=utf-8&q=%s")

(engine-mode t)
#+END_SRC
