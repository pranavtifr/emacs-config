#+BEGIN_SRC emacs-lisp
; Use evil mode
(require 'evil)
(evil-mode t)
#+END_SRC
#+BEGIN_SRC emacs-lisp
;UI Choices
(setq-default indent-tabs-mode nil)
(setq scroll-conservatively 100)
(setq-default tab-width 2)
(require 'powerline)
(powerline-center-evil-theme)


#+END_SRC
#+BEGIN_SRC emacs-lisp
(require 'auto-complete-config)
(add-to-list 'ac-dictionary-directories "~/.emacs.d/ac-dict")
(ac-config-default)

#+END_SRC
#+BEGIN_SRC emacs-lisp
 (add-hook 'find-file-hook
     (lambda ()
     (linum-mode)
      (linum-relative-global-mode t)
      (set-cursor-color "#ffffff")
        ))

#+END_SRC
#+BEGIN_SRC emacs-lisp
;For Tex
(require 'yasnippet)
(require 'tex)
(add-hook 'LaTeX-mode-hook (lambda ()
  (TeX-global-PDF-mode t)
  (auto-complete-mode t)
  (flyspell-mode t)
  (yas-global-mode 1)
    ))


#+END_SRC
#+BEGIN_SRC emacs-lisp

;For Org
(require 'org-bullets)
;;For Bullets
(add-hook 'org-mode-hook
              (lambda ()
                 (org-bullets-mode t)))
(setq org-ellipsis " <more>")
;(setq org-ellipsis "â¤µ")

;(global-set-key (kbd "<f7>") 'org-agenda)
;(global-set-key (kbd "<f6>") 'org-capture)
(add-hook 'org-capture-mode-hook 'evil-insert-state)
(define-key global-map "\C-ca" 'org-agenda)
(define-key global-map "\C-cc" 'org-capture)

;Horizontal splits for temporary buffers
(defun split-horizontally-for-temp-buffers ()
   (when (one-window-p t)
     (split-window-horizontally)))

(add-hook 'temp-buffer-window-setup-hook
            'split-horizontally-for-temp-buffers)

#+END_SRC
#+BEGIN_SRC emacs-lisp
;Engine Mode
(require 'engine-mode)

(defengine duckduckgo
  "https://duckduckgo.com/?q=%s"
:keybinding "d")

(defengine github
  "https://github.com/search?ref=simplesearch&q=%s"
:keybinding "g")

(defengine google
"http://www.google.com/search?ie=utf-8&oe=utf-8&q=%s")

(engine-mode t)

#+END_SRC
#+BEGIN_SRC emacs-lisp
;Window Size
(if (window-system)
  (set-frame-size (selected-frame) 500 500))

(setq linum-relative-current-symbol "")
#+END_SRC
